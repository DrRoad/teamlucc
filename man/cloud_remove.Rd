% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloud_remove.R
\name{cloud_remove}
\alias{cloud_remove}
\title{Remove clouds From Landsat imagery}
\usage{
cloud_remove(cloudy, clear, cloud_mask, out_name = NULL,
  algorithm = "simple", num_class = 4, min_pixel = 20, max_pixel = 1000,
  cloud_nbh = 10, DN_min = 0, DN_max = 10000,
  idl = "C:/Program Files/Exelis/IDL83/bin/bin.x86_64/idl.exe",
  verbose = FALSE, byblock = TRUE, overwrite = FALSE, ...)
}
\arguments{
\item{cloudy}{the cloudy image (base image) as a \code{Raster*}}

\item{clear}{the clear image as a \code{Raster*} to use for filling 
\code{img_cloudy}}

\item{cloud_mask}{the cloud mask as a \code{RasterLayer}, with each cloud 
patch assigned a unique integer code. Areas that are clear in both 
\code{cloudy_rast} and \code{clear_rast} should be coded 0, while areas that 
are clouded in \code{clear_rast} should be coded -1.}

\item{out_name}{filename for cloud filled image}

\item{algorithm}{must be one of: "CLOUD_REMOVE", "CLOUD_REMOVE_FAST", 
"teamlucc", or "simple". Default is "simple". See Details.}

\item{num_class}{set the estimated number of classes in image}

\item{min_pixel}{the sample size of similar pixels (ignored when 
\code{algorithm==TRUE})}

\item{max_pixel}{the maximum sample size to search for similar pixels 
(ignored when \code{algorithm==TRUE})}

\item{cloud_nbh}{the range of cloud neighborhood (in pixels)}

\item{DN_min}{the minimum valid DN value (default of 0)}

\item{DN_max}{the maximum valid DN value (default of 10000 assumes 2 byte 
integer imagery)}

\item{idl}{path to the IDL binary on your machine (on Windows, the path to 
idl.exe)}

\item{verbose}{whether to print detailed status messages. Set to FALSE or 0 
for no status messages. Set to 1 for basic status messages. Set to 2 for 
detailed status messages.}

\item{byblock}{whether to process images block by block 
(\code{byblock=TRUE}) or all at once (\code{byblock=FALSE}). Use 
\code{byblock=FALSE} with caution, as this option will cause the cloud fill 
routine to consume a large amount of memory.}

\item{overwrite}{whether to overwrite \code{out_name} if it already exists}

\item{...}{additional arguments passed to the chosen cloud fill routine}
}
\value{
\code{Raster*} with cloud-filled image
}
\description{
This code uses one of several different algorithms (depending on the 
settings, see Details) to fill heavy clouds in a Landsat image.
}
\details{
The \code{algorithm} parameter determines what algorithm is used for the 
cloud fill. \code{algorithm} must be one of: "CLOUD_REMOVE", 
"CLOUD_REMOVE_FAST", "teamlucc", or "simple" (the default). If set to 
"CLOUD_REMOVE" the script uses a (slightly modified to be called from R) 
version of  Xiaolin Zhu's NSPI IDL code. If set to "CLOUD_REMOVE_FAST", the 
algorithm uses the "fast" version of Xiaolin's code. Both of these two 
algorithms require an IDL license to run (and therefore \code{idl_path} must 
be set).  The "teamlucc" algorithm uses a version of the NSPI algorithm 
(based on the CLOUD_REMOVE code) that is coded in C++ and  can be run from R 
without an IDL license. The "simple" algorithm uses a cloud fill model that 
is based on fitting a linear model to the surface reflectance from the clear 
image in a window around each cloud, and using this linear model to predict 
reflectance in unobserved (cloudy) areas.
}
\examples{
\dontrun{
cloudy <- raster(system.file('tests', 'testthat_idl', 'cloud_remove', 
'L20080724_cloudy', package='teamlucc'))
clear <- raster(system.file('tests', 'testthat_idl', 'cloud_remove', 
'L20080606', package='teamlucc'))
cloud_mask <- raster(system.file('tests', 'testthat_idl', 'cloud_remove', 
'cloud_mask', package='teamlucc'))
filled <- cloud_remove(cloudy, clear, cloud_mask, fast=TRUE)
}
}
\references{
Zhu, X., Gao, F., Liu, D., Chen, J., 2012. A modified
neighborhood similar pixel interpolator approach for removing thick clouds 
in Landsat images. Geoscience and Remote Sensing Letters, IEEE 9, 521--525.
}

